{"version":3,"file":"static/js/299.76c7661e.chunk.js","mappings":"qNAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iEAEZ,qBAAGE,MAAkBC,OAAOC,IAA5B,IAGEC,EAAqBL,EAAAA,GAAAA,GAAH,0GAId,qBAAGE,MAAkBI,UAAUC,CAA/B,I,SCPJC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAACf,EAAD,CAAYgB,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAhD,SACGI,KAFID,EADC,KASjB,C,8OChBKK,EAAU,mCACHC,EAAe,kCACtBC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wCAA8CF,EAA9C,mBACTI,EAAM,UAAMF,EAAN,WACNG,EAAmB,UAAMH,EAAN,iCAAuCF,EAAvC,8CAEZM,EAAmB,mCAAG,6GAERC,IAAAA,IAAA,UAAaJ,IAFL,cAEzBK,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,0DAKxBC,EAAAA,EAAAA,GAAa,KAAMC,UALK,yDAAH,qDASnBC,EAAc,mCAAG,WAAMC,GAAN,gGAEHP,IAAAA,IAAA,UAClBH,GADkB,OACTU,EADS,oBACUd,EADV,oBAFG,cAEpBQ,EAFoB,yBAKnBA,EAASC,MALU,0DAOnBE,EAAAA,EAAAA,GAAa,KAAMC,UAPA,yDAAH,sDAWdG,EAAiB,mCAAG,WAAMC,GAAN,gGAENT,IAAAA,IAAA,UAAaF,EAAb,kBAA0CW,IAFpC,cAEvBR,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,0DAKtBC,EAAAA,EAAAA,GAAa,KAAMC,UALG,yDAAH,sDASjBK,EAAY,mCAAG,WAAMH,GAAN,gGAEDP,IAAAA,IAAA,UAClBH,GADkB,OACTU,EADS,4BACkBd,EADlB,2BAFC,cAElBQ,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,0DAOjBC,EAAAA,EAAAA,GAAa,KAAMC,UAPF,yDAAH,sDAWZM,EAAa,mCAAG,WAAMJ,GAAN,gGAEFP,IAAAA,IAAA,UAClBH,GADkB,OACTU,EADS,4BACkBd,EADlB,oBAFE,cAEnBQ,EAFmB,yBAKlBA,EAASC,KAAKU,MALI,0DAOlBR,EAAAA,EAAAA,GAAa,KAAMC,UAPD,yDAAH,qD,qEC/CbD,G,QAAe,SAAAS,GAC1BC,EAAAA,GAAAA,KAAWD,EAAa,CACtBE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAEb,E,0HCXYC,E,QAAahD,GAAAA,KAAH,oFACV,SAAAiD,GAAC,OAAIA,EAAE/C,MAAMgD,MAAM,EAAlB,IAEQ,SAAAD,GAAC,OAAIA,EAAE/C,MAAMgD,MAAM,EAAlB,I,SCcvB,EAda,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO1C,EAAP,KAAe2C,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACR7B,EAAAA,EAAAA,MAAsB8B,KAAKF,EAC5B,GAAE,KAGD,UAACJ,EAAD,YACE,2CACCvC,IAAU,SAACD,EAAA,EAAD,CAAcC,OAAQA,MAGtC,C","sources":["components/MovieGallery/StyledMovieGallery.js","components/MovieGallery/MovieGallery.js","components/Utils/fetchMovies.js","components/Utils/notification.js","pages/Home/StyledHome.js","pages/Home/Home.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nexport const StyledMovieGallery = styled.ul`\n  list-style: none;\n\n  li {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n    margin-bottom: 5px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport { StyledMovieGallery, StyledLink } from './StyledMovieGallery';\n\nexport const MovieGallery = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <StyledMovieGallery>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </StyledLink>\n        </li>\n      ))}\n    </StyledMovieGallery>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\nimport { notification } from './notification';\n\nconst API_KEY = '03358da3f30e688045791f6e219334d0';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US`;\nconst ID_URL = `${BASE_URL}/movie/`;\nconst SEARCH_BY_QUERY_URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${TREND_URL}`);\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchMovieByInput = async query => {\n  try {\n    const response = await axios.get(`${SEARCH_BY_QUERY_URL}&query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchCastInfo = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const notification = textMessage => {\n  toast.warn(textMessage, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n","import styled from 'styled-components';\n\nexport const StyledHome = styled.main`\n  padding: ${p => p.theme.space[3]}px;\n  h1 {\n    padding-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'components/Utils/fetchMovies';\nimport { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { StyledHome } from './StyledHome';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <StyledHome>\n      <h1>Trending today</h1>\n      {movies && <MovieGallery movies={movies} />}\n    </StyledHome>\n  );\n};\n\nexport default Home;\n"],"names":["StyledLink","styled","NavLink","theme","colors","text","StyledMovieGallery","fontSizes","l","MovieGallery","movies","location","useLocation","map","id","title","to","state","from","API_KEY","BASE_IMG_URL","BASE_URL","TREND_URL","ID_URL","SEARCH_BY_QUERY_URL","fetchTrendingMovies","axios","response","data","results","notification","message","fetchMovieById","movieId","fetchMovieByInput","query","fetchReviews","fetchCastInfo","cast","textMessage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","StyledHome","p","space","useState","setMovies","useEffect","then"],"sourceRoot":""}