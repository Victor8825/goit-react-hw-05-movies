{"version":3,"file":"static/js/760.d90ba245.chunk.js","mappings":"0OAEaA,E,QAAgBC,GAAAA,IAAH,mKAET,qBAAGC,MAAkBC,UAAUC,CAA/B,IACE,qBAAGF,MAAkBG,MAAM,EAA3B,IAOA,qBAAGH,MAAkBC,UAAUG,EAA/B,I,SCmBnB,EA1BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC5B,GAAE,CAACC,KAGF,SAACV,EAAD,WACIQ,EAAQO,OAAS,GACjB,mDAEA,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADE,OAUtB,C,8OC1BKC,EAAU,mCACHC,EAAe,kCACtBC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wCAA8CF,EAA9C,mBACTI,EAAM,UAAMF,EAAN,WACNG,EAAmB,UAAMH,EAAN,iCAAuCF,EAAvC,8CAEZM,EAAmB,mCAAG,6GAERC,IAAAA,IAAA,UAAaJ,IAFL,cAEzBK,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,0DAKxBC,EAAAA,EAAAA,GAAa,KAAMC,UALK,yDAAH,qDASnBC,EAAc,mCAAG,WAAMvB,GAAN,gGAEHiB,IAAAA,IAAA,UAClBH,GADkB,OACTd,EADS,oBACUU,EADV,oBAFG,cAEpBQ,EAFoB,yBAKnBA,EAASC,MALU,0DAOnBE,EAAAA,EAAAA,GAAa,KAAMC,UAPA,yDAAH,sDAWdE,EAAiB,mCAAG,WAAMC,GAAN,gGAENR,IAAAA,IAAA,UAAaF,EAAb,kBAA0CU,IAFpC,cAEvBP,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,0DAKtBC,EAAAA,EAAAA,GAAa,KAAMC,UALG,yDAAH,sDASjBnB,EAAY,mCAAG,WAAMH,GAAN,gGAEDiB,IAAAA,IAAA,UAClBH,GADkB,OACTd,EADS,4BACkBU,EADlB,2BAFC,cAElBQ,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,0DAOjBC,EAAAA,EAAAA,GAAa,KAAMC,UAPF,yDAAH,sDAWZI,EAAa,mCAAG,WAAM1B,GAAN,gGAEFiB,IAAAA,IAAA,UAClBH,GADkB,OACTd,EADS,4BACkBU,EADlB,oBAFE,cAEnBQ,EAFmB,yBAKlBA,EAASC,KAAKQ,MALI,0DAOlBN,EAAAA,EAAAA,GAAa,KAAMC,UAPD,yDAAH,qD,qEC/CbD,G,QAAe,SAAAO,GAC1BC,EAAAA,GAAAA,KAAWD,EAAa,CACtBE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAEb,E","sources":["components/Reviews/StyledReviews.js","components/Reviews/Reviews.js","components/Utils/fetchMovies.js","components/Utils/notification.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledReviews = styled.div`\n  h3 {\n    font-size: ${({ theme }) => theme.fontSizes.l};\n    margin-left: ${({ theme }) => theme.space[6]}px;\n  }\n\n  ul {\n    list-style: none;\n\n    li {\n      font-size: ${({ theme }) => theme.fontSizes.sm};\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'components/Utils/fetchMovies';\nimport { StyledReviews } from './StyledReviews';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <StyledReviews>\n      {!reviews.length > 0 ? (\n        <h3>There are no reviews!</h3>\n      ) : (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </StyledReviews>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport { notification } from './notification';\n\nconst API_KEY = '03358da3f30e688045791f6e219334d0';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US`;\nconst ID_URL = `${BASE_URL}/movie/`;\nconst SEARCH_BY_QUERY_URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${TREND_URL}`);\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchMovieByInput = async query => {\n  try {\n    const response = await axios.get(`${SEARCH_BY_QUERY_URL}&query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchCastInfo = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const notification = textMessage => {\n  toast.warn(textMessage, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n"],"names":["StyledReviews","styled","theme","fontSizes","l","space","sm","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","then","length","map","author","content","id","API_KEY","BASE_IMG_URL","BASE_URL","TREND_URL","ID_URL","SEARCH_BY_QUERY_URL","fetchTrendingMovies","axios","response","data","results","notification","message","fetchMovieById","fetchMovieByInput","query","fetchCastInfo","cast","textMessage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}