{"version":3,"file":"static/js/705.f6931502.chunk.js","mappings":"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","sources":["components/Utils/fetchMovies.js","components/Utils/notification.js","pages/MovieDetailes/StyledMovieDetails.js","pages/MovieDetailes/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\nimport { notification } from './notification';\n\nconst API_KEY = '03358da3f30e688045791f6e219334d0';\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US`;\nconst ID_URL = `${BASE_URL}/movie/`;\nconst SEARCH_BY_QUERY_URL = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${TREND_URL}`);\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchMovieByInput = async query => {\n  try {\n    const response = await axios.get(`${SEARCH_BY_QUERY_URL}&query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n\nexport const fetchCastInfo = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return notification(error.message);\n  }\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const notification = textMessage => {\n  toast.warn(textMessage, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    display: inline-block;\n    font-size: ${({ theme }) => theme.fontSizes.sm};\n    height: ${p => p.theme.space[8]}px;\n    border: ${p => p.theme.borders.none};\n    border-radius: ${({ theme }) => theme.radii.sm};\n    padding: ${p => p.theme.space[4]}px;\n    margin-left: ${p => p.theme.space[4]}px;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    &:hover {\n      color: white;\n      background-color: orangered;\n    }\n  }\n`;\n\nexport const StyledMovieDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${({ theme }) => theme.space[4]}px;\n  font-size: ${({ theme }) => theme.fontSizes.sm};\n\n  img {\n    object-fit: cover;\n  }\n\n  ul {\n    padding: 0;\n    list-style: none;\n  }\n\n  section {\n    margin-left: ${({ theme }) => theme.space[7]}px;\n    margin-top: ${({ theme }) => theme.space[6]}px;\n    color: orangered;\n  }\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieById, BASE_IMG_URL } from 'components/Utils/fetchMovies';\nimport { Box } from 'components/General/Box.styled';\nimport { Loader } from 'components/Utils/Loader';\nimport { StyledMovieDetails, StyledLink } from './StyledMovieDetails';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  const {\n    original_title: title,\n    release_date: date,\n    poster_path: poster,\n    vote_average: vote,\n    overview,\n    genres,\n  } = movie;\n\n  return (\n    <main>\n      <StyledLink to={backLinkHref}>\n        <button type=\"button\">Go back</button>\n      </StyledLink>\n\n      {movie ? (\n        <StyledMovieDetails>\n          <Box>\n            <img\n              src={`${BASE_IMG_URL}${poster}`}\n              alt=\"\"\n              width=\"400\"\n              height=\"500\"\n            />\n            <Box flexDirection=\"column\" p={8}>\n              <h2>\n                {title} ({date.slice(0, 4)})\n              </h2>\n              <p>User vote: {Math.round(vote)}</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <Box as=\"ul\" gridGap={4}>\n                {genres.map(({ name, id }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </Box>\n            </Box>\n          </Box>\n          <section>\n            <h3>Additional information</h3>\n            <ul>\n              <li key=\"Cast\">\n                <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n                  Cast\n                </StyledLink>\n              </li>\n              <li key=\"Reviews\">\n                <StyledLink\n                  to=\"reviews\"\n                  title={title}\n                  state={{ from: backLinkHref }}\n                >\n                  Reviews\n                </StyledLink>\n              </li>\n            </ul>\n          </section>\n        </StyledMovieDetails>\n      ) : (\n        <Loader />\n      )}\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_IMG_URL","BASE_URL","TREND_URL","ID_URL","SEARCH_BY_QUERY_URL","fetchTrendingMovies","axios","response","data","results","notification","message","fetchMovieById","movieId","fetchMovieByInput","query","fetchReviews","fetchCastInfo","cast","textMessage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","StyledLink","styled","NavLink","theme","colors","text","fontSizes","sm","p","space","borders","none","radii","StyledMovieDetails","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","backLinkHref","state","from","title","original_title","date","release_date","poster","poster_path","vote","vote_average","overview","genres","to","type","src","alt","width","height","flexDirection","slice","Math","round","as","gridGap","map","name","id","Loader"],"sourceRoot":""}